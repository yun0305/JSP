<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"  %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

	<%
		/*
		앞서 몇가지의 예제를 통해 JSP코드를 작성하고 실행해 보았다. 마치 결과물을 즉시 웹 브라우저에
		출력되는 것처럼 보이지만 실제 JSP의 실행 과정은 복잡하다. JSP 파일은 서블릿 코드로 변환된 후
		컴파일되어 class 파일로 만들어 집니다. 이를 실행한 결과물을 HTML 형태로 웹 브라우저에 보내
		최정적으로 화면에 출력하는 것이다.
		또한 이과정에서 응답 결과를 웹 브라우저로 즉시 전송하지 않고 , 출력할 내용을 버퍼에 저장했다가 일정량이
		되었을 때 전송하게 된다.
		
		<버퍼란?>
		버퍼 개념은 매우 다양하게 사용되며, 가장 쉽게 접할수 있는 곳은 유튜브 같은 스트리밍 서비스이다.
		네트워크로 영상 데이터를 전송할때, 작은 단위로 여러번 전송하는 것보다 큰단위로 묶어서 한 번에 보내는 편이
		훤씬 효율적이다. 그래서 이떄 버퍼라는 임시 저장소를 두어 데이터들이 충분히 쌓일 때까지 기다렸다가 보낸다.
		
		(그림첨조 page73)
		
		JSP에서는 버퍼룰 사용함으로써 포워드와 에러 페이지 처리를 할 수 있다. JSP가 생성한 결과는 일단 버퍼에
		저장된다. 만약 실행도중 에러가 발생하면 버퍼에 저장된 내용울 삭제하고 에러 화면을 표시한다
		(포워드 2장에서 배움)
		
		
		
		*/
		
		/*
		page지시어의 buffer 속성으로는 버퍼의 크기를 설정할 수 있습니다.(기본값은 8kb입니다.)
		(page buffer = "1kb")
		
		버퍼를 사용하고 싶지 않다면 "none"으로 지정합니다.
		page buffer = "none"
		
		단 버퍼를 사용하지 않으면 포워드나 에러 페이지 기능을 사용할수 없습니다. 따라서 "none" 으로 지정하는 경우
		는 거의 없습니다. 즉 buffer 속성을 통해 버퍼의 크기나 사용 여부를 지정할수는 있으나 크기를 줄이면
		jsp의 기능을 온전히 사용할 수 없게 되므로 거의 사용하지 않습니다
		
		이어서 autoFlush 속성은 버퍼가 모두 채워졌을 때의 처리 방법을 정하는 데 쓰입니다. 값은 "true"와
		"flase" 중 선택할 수 있으며, 의미는 다음과 같습니다.
		
		true(기본값) : 버퍼가 채워지면 자동으로 플러시 합니다.
		false : 버퍼가 채워지면 예외를 발생시킵니다.
		(플러시(flush)란 버퍼 안에 대이터를 목적지로 전송하고 버퍼를 비우는 작업을 말합니다.)
		
		
		*/
	
	
	%>


</body>
</html>