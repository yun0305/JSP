<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<%
		/*
		제품에 어떤기능을 기본으로 내장했다고 함은 내장된 기능이 그 제품에서 핵심적이고 매우 유용하다는 뜻이다.
		JSP의 내장객체도 마찬가지다. 기본적인 요청과 응답, 화면 출력 등은 거의 모든 웹 프로그래밍에 있어 필수라 할 수 있다.
		
		웹은 (그림참조 page84) 그림처럼 클라이언트가 서버로 요청을 보내면, 서버는 그에 맞는 결과를 응답으로 돌려주는 형태로
		동작한다. 이때 JSP의 내장 객체는 요청과 응답 혹은 HTTP 헤더 등의 정보를 쉽게 다룰 수 있도록 해준다.
		
		내장 객체는 JSP 페이지가 실행될 때 컨테이너가 자동으로 생성해준다. 별도로 선언하거나 객체로 생성하지 않아도 즉시 사용할 수
		있는데, 그 이유는 JSP의 실행 과정에서 찾을 수 있다, JSP는 실행될때 자바 파일인 서불릿으로 변환되어 컴파일된다.
		이 변환 과정에서 _jspService()메소드가 생성되는데 이 메소드 안에 다음과 같은 코드들이 삽입된다.(그림 참조 page 85)
		
		삽입된 문장들을 보면 _jspService() 메소드안에 여러 객체를 선언하고 초기화하는 필드 들이 있는것을 볼수 있다.
		바로 내장객체의 참조 변수를 컨테이너가 생성하는 부분이다.
		
		내장객체는 다음과 같은 특징을 지니고 있다.
		
		1.컨테이너가 미리 선언해놓은 참조 변수를 이용해 사용한다.
		2.별도의 객체 생성 없이 각 내장 객체의 메소드를 사용할 수 있다.
		3.JSP 문서 안의 스크립틀릿과, 표현식 에서만 사용할 수 있다. 
		4.선언부 에서는 즉시 사용하는 건 불가능하고, 매개변수로 전달받아 사용할 수는 있다.
		
		내장객체의 종류(표참조 page 86) 표에서 보듯 내장 객체는 총 아홉 가지가 있다. 이번 장에서는 이중 가장 기본적인
		request, response, out, application, exception에 대해 자세히 알아보겠다.
		
		*/
		
		
	
	%>
	
</body>
</html>